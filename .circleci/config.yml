jobs:
  build:
    docker:
      - image: 'node:latest'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            npm install -g @angular/cli
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Building
          command: |
            npm run build:prod

  deploy:
    docker:
      - image: 'circleci/python:2.7'
    steps:
      - checkout
      - aws-s3/sync:
          from: dist/angular-boiler-plate
          to: 's3://audit-tool-frontend'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true
      - aws-s3/copy:
          from: dist/angular-boiler-plate
          to: 's3://audit-tool-frontend'
          arguments: '--dryrun'

  sonar:
    docker:
      - image: 'node:latest'
    steps:
      - checkout
      - sonarcloud/scan

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1
  aws-s3: circleci/aws-s3@1.0.13

version: 2.1
workflows:
  main:
    jobs:
      - sonar:
          context: SonarClouldFrontend
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                development